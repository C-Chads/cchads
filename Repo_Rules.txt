~~~~~~~~~~~~~~~~~~~~~~~~
Repository pushing rules
updated Oct 6 2020
~~~~~~~~~~~~~~~~~~~~~~~~
(These rules only apply if you desire to submit a program to the C Chads main repository via git)
(You can submit on the discord server, or create a new repository without worry)

0) Don't submit proprietary or improperly licensed code. This is a free software project.
	This rule applies to ALL REPOSITORIES AND IP UNDER CCHADS!!!
1) Don't delete other people's files without their permission (It goes by commiter)
2) If you need a different version of a library than is in the repository (E.g. stb_image)
	you can ask to have it replaced or you can insert your own in a folder, but do not thoughtlessly replace it.
3) Do not push compiled binaries to the repository (Exceptions: Lua Bytecode, WebASM)
4) if your code is to be added to the makefile tree, you must implement "make clean" and "make all" in subdirectories.
   Even if you do not make a subdirectory you must implement make clean.
5) Headers which are useful for multiple programs can be added to existing include/ but do not replace an old one without permission.
6) Directories are organized firstly by license, then by project category, then by dependencies.
Stuff in Top level directories, with license labels, 
roughly require standard UNIX/LibC stuff (+Maybe other things in CCHADS?)

E.g. the top level of MIT contains mostly programs that write to standard out. A pthreads program. Etc.

If your project has significantly different dependencies than the other files in the same directory,
you should make a subdirectory for it.

If your project is large and involves a lot of special code, it should be a subdirectory... or a separate repository (How big?)

You are allowed to make subdirectories within subdirectories. In fact that's suggested if you want to write
stuff which depends on other peoples' code. Want to fork TinyGL? Make a subdirectory (...or another repository).

7) Don't push zip/rar/tar archives with code in them to the repos, unless you have a really good reason.
8) Ask the makefile maintainer before adding your stuff to the Makefile tree. It's fine to make your own makefile in a subdirectory.
9) Do not write malware
10) If a program has heavy dependencies (E.g. SDL2) then it probably doesn't belong in the top level of a 
	license directory.
11) GPL-licensed programs may link to MIT ones, but not the other way around. MIT licensed programs may link to LGPL libs though.
    Additionally, a program under the LGPL cannot link or depend on one under the GPL. Basically, someone wandering onto
    our repository shouldn't have to worry about the licenses of dependencies. if you have GPL deps, your program is under the GPL.
12) Extremely large programs (>200MB) should be their own repository.
13) Programs that desire to be added to the existing makefile tree must be tested and approved by the makefile maintainer.
14) The makefile maintainer has permission to edit all your makefiles, or remove them from the makefile tree
15) Do not put symlinks in the repository
16) Do not abuse push permissions
~~~~~~~~~~~~JOBS~~~~~~~~~~~ (Oct 6 2020)
BUILD MAINTAINER: Gek
REPO MAINTAINER: Gek
WEB DESIGNER: Abbix
WEB ENGINEER: rizxt